package Tile;

import Wejscia.Vector2f;
import ZasobyGraficzne.Gracz;
import java.util.HashMap;
import java.util.ArrayList;
import java.awt.Graphics2D;
import Tile.Blocks.*;
import Kod.Algorytm.Item;
import ZasobyGraficzne.Gracz;


public class TileMapObj extends TileMap {
    public static HashMap<String, Block> tm_blocks;




    public TileMapObj(String data, Gracz postac, int width, int height, int tileWidth, int tileHeight, int TileColumns) {
        Block tempBlock;

        tm_blocks = new HashMap<String, Block>();

        String[] block = data.split(",");
        for (int i = 0; i < (width * height); i++) {
            int temp = Integer.parseInt(block[i].replaceAll("\\s+", ""));
            if (temp != 0) {
                if (temp == 5) {
                    tempBlock = new WallBlock(postac.getPostac((int) (((temp - 1) % TileColumns)*16), (int) (((temp - 1) / TileColumns))*16), new Vector2f((int) (i % width) * tileWidth, (int) (i / height) * tileHeight), tileWidth, tileHeight);
                    System.out.println(((temp - 1) % TileColumns)*16);
                    System.out.println(((temp - 1) / TileColumns)*16);
                } else if(temp == 49){
                    tempBlock = new DoorBlock(postac.getPostac((int) (((temp - 1) % TileColumns)*16), (int) (((temp - 1) / TileColumns))*16), new Vector2f((int) (i % width) * tileWidth, (int) (i / height) * tileHeight), tileWidth, tileHeight);
                    System.out.println("Udało się drzwi");
                }else {
                    tempBlock = new ObjBlock(postac.getPostac((int) (((temp - 1) % TileColumns)*16), (int) (((temp - 1) / TileColumns))*16), new Vector2f((int) (i % width) * tileWidth, (int) (i / height) * tileHeight), tileWidth, tileHeight, new Item("Obiekt", "Object"));
                    System.out.println(((temp - 1) % TileColumns)*16);
                    System.out.println(((temp - 1) / TileColumns)*16);
                }
                tm_blocks.put(String.valueOf((int) (i % width)) + "," + String.valueOf((int) (i / height)), tempBlock);
            }
        }
    }

    public void render(Graphics2D g){
        for(Block block: tm_blocks.values()){
            block.render(g);
        }
    }
}
